
LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ git --version
git version 2.31.1.windows.1

LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ git config --global user.name "Mesut"

LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ git config --global user.email "mevltyldz1@gmail.com"

LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ git config --global core.editor "vim"

LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ vim

LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bund
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
color.ui=auto
user.name=Mesut
user.email=mevltyldz1@gmail.com
core.editor=vim
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true

LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ cd

LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ pwd
/c/Users/LENOVO

LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ cd Desktop

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop
$ cd git_lesson

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson
$ mkdir work1

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson
$ cd work1

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1
$ git init
Initialized empty Git repository in C:/Users/LENOVO/Desktop/gt/

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to tra

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ ls
new_file1/

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to tra

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committ
        new_file1.rtf

nothing added to commit but untracked files present (use "git

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value
           [--exec-path[=<path>]] [--html-path] [--man-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-
           [--git-dir=<path>] [--work-tree=<path>] [--namespa
           [--super-prefix=<path>] [--config-env=<name>=<envv
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitone

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a
   restore           Restore working tree files
   rm                Remove files from the working tree and f
   sparse-checkout   Initialize and modify the sparse-checkou

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit tha
   diff              Show changes between commits, commit and
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories t
   rebase            Reapply commits on top of another base t
   reset             Reset current HEAD to the specified stat
   switch            Switch branches
   tag               Create, list, delete or verify a tag obj

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another r
   pull              Fetch from and integrate with another re branch
   push              Update remote refs along with associated

'git help -a' and 'git help -g' list available subcommands an
concept guides. See 'git help <command>' or 'git help <concep
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ git add new_file1.txt
fatal: pathspec 'new_file1.txt' did not match any files

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ git add new_file1
fatal: pathspec 'new_file1' did not match any files

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ git add new_file1
fatal: pathspec 'new_file1' did not match any files

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ ls
new_file1.rtf

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ git add new_file1.rtf

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (ma
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   new_file1.rtf

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        new_file2.txt


LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git add new_file2.txt

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git add .

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git add new_file1
fatal: pathspec 'new_file1' did not match any files

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git add .

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git add new_file1.txt

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git add new_file2.txt

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git add new_file3.txt

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git commit -m "first commit"
[master (root-commit) 5c2cc2d] first commit
 3 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 new_file1.txt
 create mode 100644 new_file2.txt
 create mode 100644 new_file3.txt

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git status
On branch master
nothing to commit, working tree clean

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   new_file1.txt

no changes added to commit (use "git add" and/or "git commit -a")

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git add .

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   new_file1.txt


LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git commit -m "new_file1 üzerinde ilk satır eklendi."
[master bd67eb7] new_file1 üzerinde ilk satır eklendi.
 1 file changed, 1 insertion(+)

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git status
On branch master
nothing to commit, working tree clean

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git log
commit bd67eb78776fe63c3eb3bfadf2dc17ebded4357e (HEAD -> master)
Author: MevlutYildiz77 <85449967+MevlutYildiz77@users.noreply.github.com>
Date:   Sat Jul 3 13:20:38 2021 +0300

    new_file1 üzerinde ilk satır eklendi.

commit 5c2cc2d9adaf903a43f46b3a6cba1d6ea8f1fc7c
Author: MevlutYildiz77 <85449967+MevlutYildiz77@users.noreply.github.com>
Date:   Sat Jul 3 13:11:40 2021 +0300

    first commit

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git checkout 5c2cc
error: pathspec '5c2cc' did not match any file(s) known to git

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git checkout bd67e
Note: switching to 'bd67e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at bd67eb7 new_file1 üzerinde ilk satır eklendi.
M       new_file1.txt

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 ((bd67eb7...))
$ git checkout bd67e
HEAD is now at bd67eb7 new_file1 üzerinde ilk satır eklendi.
M       new_file1.txt

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 ((bd67eb7...))
$ git status
HEAD detached at bd67eb7
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   new_file1.txt

no changes added to commit (use "git add" and/or "git commit -a")

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 ((bd67eb7...))
$ git commit -am "ikinci satır eklendi."
[detached HEAD 9f09d7d] ikinci satır eklendi.
 1 file changed, 2 insertions(+), 1 deletion(-)

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 ((9f09d7d...))
$ git log
commit 9f09d7d9a718fcde59967ef1b6681d1093e10628 (HEAD)
Author: MevlutYildiz77 <85449967+MevlutYildiz77@users.noreply.github.com>
Date:   Sat Jul 3 13:35:17 2021 +0300

    ikinci satır eklendi.

commit bd67eb78776fe63c3eb3bfadf2dc17ebded4357e (master)
Author: MevlutYildiz77 <85449967+MevlutYildiz77@users.noreply.github.com>
Date:   Sat Jul 3 13:20:38 2021 +0300

    new_file1 üzerinde ilk satır eklendi.

commit 5c2cc2d9adaf903a43f46b3a6cba1d6ea8f1fc7c
Author: MevlutYildiz77 <85449967+MevlutYildiz77@users.noreply.github.com>
Date:   Sat Jul 3 13:11:40 2021 +0300

    first commit

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 ((9f09d7d...))
$ git checkout master
Warning: you are leaving 1 commit behind, not connected to
any of your branches:

  9f09d7d ikinci satır eklendi.

If you want to keep it by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 9f09d7d

Switched to branch 'master'

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$ git commit --amend
[master 4e29240] new_file1 üzerinde ilk satır eklendi.
 Date: Sat Jul 3 13:20:38 2021 +0300
 1 file changed, 1 insertion(+)

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$^C

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Desktop/git_lesson/work1 (master)
$


LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ mkdir Git-Lesson-3/

LENOVO@DESKTOP-85GCHBU MINGW64 ~
$ cd Git-Lesson-3

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3
$ git init
Initialized empty Git repository in C:/Users/LENOVO/Git-Lesson-3/.git/

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3 (master)
$ touch dosya1 dosya2

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3 (master)
$ ls
dosya1  dosya2

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3 (master)
$ git add dosya1

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3 (master)
$ git config -global user.name
error: did you mean `--global` (with two dashes)?

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3 (master)
$ y
bash: y: command not found

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3 (master)
$ git config --global user.name
MevlutYildiz77

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3 (master)
$ git congig --global user.email
git: 'congig' is not a git command. See 'git --help'.

The most similar command is
        config

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3 (master)
$ git config --global core.editor
vim

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3 (master)
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
color.ui=auto
user.name=MevlutYildiz77
user.email=85449967+MevlutYildiz77@users.noreply.github.com
core.editor=vim
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true

LENOVO@DESKTOP-85GCHBU MINGW64 ~/Git-Lesson-3 (master)


